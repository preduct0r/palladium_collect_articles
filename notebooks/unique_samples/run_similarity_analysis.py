#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ö–æ–¥—Å—Ç–≤–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from find_similar_pairs import SimilarityFinder

def main():
    print("üîç –ó–∞–ø—É—Å–∫–∞—é –∞–Ω–∞–ª–∏–∑ —Å—Ö–æ–¥—Å—Ç–≤–∞ –≤–æ–ø—Ä–æ—Å–æ–≤...")
    print("=" * 50)
    
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏
    excel_file = "BENCH2.xlsx"
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    finder = SimilarityFinder(
        excel_file_path=excel_file,
        cache_dir="./cache"
    )
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
    try:
        top_pairs, duplicates = finder.run_analysis(
            top_k=15,  # –¢–æ–ø-15 –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ—Ö–æ–∂–∏—Ö –ø–∞—Ä
            similarity_threshold=0.90,  # –ü–æ—Ä–æ–≥ –¥–ª—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ 90%
            force_recompute=False  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à –µ—Å–ª–∏ –µ—Å—Ç—å
        )
        
        print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(top_pairs)} —Ç–æ–ø –ø–æ—Ö–æ–∂–∏—Ö –ø–∞—Ä")
        print(f"üîÑ –ù–∞–π–¥–µ–Ω–æ {len(duplicates)} –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")
        print("\nüìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª—ã:")
        print("   - top_similar_pairs.xlsx")
        if duplicates:
            print("   - potential_duplicates.xlsx")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 